// <auto-generated />
using System;
using Escola.Models.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Escola.Api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250821185157_contatos")]
    partial class contatos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Escola.Models.Entities.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Cpf");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.Property<string>("NomeResponsavel")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("NomeResponsavel");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Rg");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nome" }, "IX_Aluno_Nome");

                    b.ToTable("Aluno", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Entities.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<bool>("Celular")
                        .HasColumnType("bit")
                        .HasColumnName("Celular");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("Celular");

                    b.ToTable("Contato", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Entities.Disciplinas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("INT")
                        .HasColumnName("CargaHoraria");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Disciplinas", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Bairro");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Cidade");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Complemento");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Logradouro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Numero");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("Logradouro");

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Entities.Frequencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAula")
                        .HasColumnType("date")
                        .HasColumnName("DataAula");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<bool>("Presente")
                        .HasColumnType("bit")
                        .HasColumnName("Presente");

                    b.Property<int>("TurmaDisciplinasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaId");

                    b.HasIndex("TurmaDisciplinasId");

                    b.ToTable("Frequencia", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Entities.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataMatricula")
                        .HasColumnType("date")
                        .HasColumnName("DataMatricula");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("DataMatricula");

                    b.HasIndex("TurmaId");

                    b.ToTable("Matricula", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Entities.Nota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAvaliacao")
                        .HasColumnType("date")
                        .HasColumnName("DataAvaliacao");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<int>("NotaAluno")
                        .HasColumnType("INT")
                        .HasColumnName("NotaAluno");

                    b.Property<int>("PeriodoAvaliacao")
                        .HasColumnType("int");

                    b.Property<int>("TurmaDisciplinasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaId");

                    b.HasIndex("TurmaDisciplinasId");

                    b.ToTable("Nota", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Entities.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Cpf");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Email");

                    b.Property<string>("Formacao")
                        .HasMaxLength(120)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Formacao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Rg");

                    b.Property<string>("Telefone")
                        .HasMaxLength(16)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Telefone");

                    b.HasKey("Id");

                    b.ToTable("Professor", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Entities.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AnoLetivo")
                        .HasColumnType("date")
                        .HasColumnName("AnoLetivo");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Serie");

                    b.Property<int>("TurmaPeriodo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Turma", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Entities.TurmaDisciplinas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TurmaId");

                    b.ToTable("TurmaDisciplinas", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Entities.Contato", b =>
                {
                    b.HasOne("Escola.Models.Entities.Aluno", "Aluno")
                        .WithMany("Contatos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_escola_contato_escola_aluno");

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("Escola.Models.Entities.Endereco", b =>
                {
                    b.HasOne("Escola.Models.Entities.Aluno", "Aluno")
                        .WithMany("Enderecos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_escola_endereco_escola_aluno");

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("Escola.Models.Entities.Frequencia", b =>
                {
                    b.HasOne("Escola.Models.Entities.Matricula", "Matricula")
                        .WithMany("Frequencias")
                        .HasForeignKey("MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_escola_frequencia_escola_matricula");

                    b.HasOne("Escola.Models.Entities.TurmaDisciplinas", "TurmaDisciplinas")
                        .WithMany("Frequencias")
                        .HasForeignKey("TurmaDisciplinasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_escola_frequencia_escola_turmaDisciplinas");

                    b.Navigation("Matricula");

                    b.Navigation("TurmaDisciplinas");
                });

            modelBuilder.Entity("Escola.Models.Entities.Matricula", b =>
                {
                    b.HasOne("Escola.Models.Entities.Aluno", "Aluno")
                        .WithMany("Matriculas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_escola_matricula_escola_aluno");

                    b.HasOne("Escola.Models.Entities.Turma", "Turma")
                        .WithMany("Matriculas")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_escola_matricula_escola_turma");

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Escola.Models.Entities.Nota", b =>
                {
                    b.HasOne("Escola.Models.Entities.Matricula", "Matricula")
                        .WithMany("Notas")
                        .HasForeignKey("MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_escola_nota_escola_matricula");

                    b.HasOne("Escola.Models.Entities.TurmaDisciplinas", "TurmaDisciplinas")
                        .WithMany("Notas")
                        .HasForeignKey("TurmaDisciplinasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_escola_nota_escola_turmaDisciplinas");

                    b.Navigation("Matricula");

                    b.Navigation("TurmaDisciplinas");
                });

            modelBuilder.Entity("Escola.Models.Entities.TurmaDisciplinas", b =>
                {
                    b.HasOne("Escola.Models.Entities.Disciplinas", "Disciplina")
                        .WithMany("TurmaDisciplinas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_escola_turmaDisciplinasescola_disciplina");

                    b.HasOne("Escola.Models.Entities.Professor", "Professor")
                        .WithMany("TurmaDisciplinas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_escola_turmaDisciplinas_escola_professor");

                    b.HasOne("Escola.Models.Entities.Turma", "Turma")
                        .WithMany("TurmaDisciplinas")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_escola_turmaDisciplinasescola_turma");

                    b.Navigation("Disciplina");

                    b.Navigation("Professor");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Escola.Models.Entities.Aluno", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("Enderecos");

                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("Escola.Models.Entities.Disciplinas", b =>
                {
                    b.Navigation("TurmaDisciplinas");
                });

            modelBuilder.Entity("Escola.Models.Entities.Matricula", b =>
                {
                    b.Navigation("Frequencias");

                    b.Navigation("Notas");
                });

            modelBuilder.Entity("Escola.Models.Entities.Professor", b =>
                {
                    b.Navigation("TurmaDisciplinas");
                });

            modelBuilder.Entity("Escola.Models.Entities.Turma", b =>
                {
                    b.Navigation("Matriculas");

                    b.Navigation("TurmaDisciplinas");
                });

            modelBuilder.Entity("Escola.Models.Entities.TurmaDisciplinas", b =>
                {
                    b.Navigation("Frequencias");

                    b.Navigation("Notas");
                });
#pragma warning restore 612, 618
        }
    }
}
